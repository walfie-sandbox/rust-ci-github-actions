name: Release

on: [release]

jobs:
  release:
    name: Release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-musl
          archive: tar
        - os: macOS-latest
          target: x86_64-apple-darwin
          archive: tar
        - os: windows-latest
          target: x86_64-pc-windows-msvc
          archive: zip
    steps:
    - name: Check GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - uses: actions/checkout@v1
    - name: Install rust
      shell: bash
      run: |
        if hash rustup 2>/dev/null; then
          rustup update
        else
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          mv $HOME/.cargo/bin/* /usr/local/bin
        fi

        rustup target add ${{ matrix.target }}
    - name: Build
      run: cargo build --release --all --target ${{ matrix.target }}
    - name: Upload artifacts
      shell: bash
      if: github.event.action == 'created'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd target/${{ matrix.target }}/release
        EXECUTABLE_PATH="$(find . -maxdepth 1 -type f -perm -u+x | head -n 1)"
        EXECUTABLE_BASENAME="$(basename $EXECUTABLE_PATH)"
        OUTPUT_FILE="$EXECUTABLE_BASENAME-${{ github.event.release.tag_name }}-${{ matrix.target }}"

        case "${{ matrix.archive }}" in
          zip)
            OUTPUT_FILE="$OUTPUT_FILE.zip"
            7z a -tzip $OUTPUT_FILE $EXECUTABLE_PATH
            ;;
          *)
            OUTPUT_FILE="$OUTPUT_FILE.tar.gz"
            tar -czvf $OUTPUT_FILE $EXECUTABLE_PATH
            ;;
        esac

        UPLOAD_BASE_URL="$(echo '${{ github.event.release.upload_url }}' | sed 's/{?.*}$//')"

        curl -fsSL -XPOST \
          --upload-file $OUTPUT_FILE \
          --header "Authorization: token $GITHUB_TOKEN" \
          --header "Content-Type: application/octet-stream" \
          "$UPLOAD_BASE_URL?name=$OUTPUT_FILE"

